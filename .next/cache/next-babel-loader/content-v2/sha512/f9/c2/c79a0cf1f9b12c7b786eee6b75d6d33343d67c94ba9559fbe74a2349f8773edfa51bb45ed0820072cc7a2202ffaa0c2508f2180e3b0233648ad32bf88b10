{"ast":null,"code":"import _regeneratorRuntime from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport Router from 'next/router';\nimport firebase from './firebase';\nimport { createUser } from './db';\nimport { useSnackbar } from 'notistack';\nvar authContext = /*#__PURE__*/createContext();\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var auth = useFirebaseAuth();\n  return /*#__PURE__*/_jsx(authContext.Provider, {\n    value: auth,\n    children: children\n  });\n}\nexport var useAuth = function useAuth() {\n  return useContext(authContext);\n};\n\nfunction useFirebaseAuth() {\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var firestore = firebase.firestore();\n\n  var handleUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawUser) {\n      var _user, token, userWithoutToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!rawUser) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 3;\n              return formatUser(rawUser);\n\n            case 3:\n              _user = _context.sent;\n              token = _user.token, userWithoutToken = _objectWithoutProperties(_user, [\"token\"]);\n              createUser(_user.uid, userWithoutToken);\n              setUser(_user);\n              setLoading(false);\n              return _context.abrupt(\"return\", _user);\n\n            case 11:\n              setUser(false);\n              setLoading(false);\n              return _context.abrupt(\"return\", false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUser(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var signupWithEmail = function signupWithEmail(email, password, firstName, type, lastName, cid, years, redirect) {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      firestore.collection('users').doc(response.user.uid).set({\n        first_name: firstName,\n        last_name: lastName,\n        type: type,\n        cid: cid,\n        years: years\n      });\n      handleUser(response.user);\n      enqueueSnackbar(\"Registration successful (Set password for your account using forgot password link in signin page)\", {\n        variant: 'success'\n      });\n      signout();\n      Router.push('/signin');\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    })[\"catch\"](function (err) {\n      enqueueSnackbar(err.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  var resetPassword = function resetPassword(email) {\n    setLoading(true);\n    return firebase.auth().sendPasswordResetEmail(email).then(function (response) {\n      enqueueSnackbar('Email sucessfully sent to the registered mail', {\n        variant: 'success'\n      });\n    })[\"catch\"](function (err) {\n      enqueueSnackbar(err.message, {\n        variant: \"error\"\n      });\n    });\n  };\n\n  var signinWithEmail = function signinWithEmail(email, password, redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      handleUser(response.user);\n\n      if (response.user) {\n        firebase.firestore().collection('users').doc(response.user.uid).get().then(function (doc) {\n          var type = doc.data().type;\n\n          if (type === 0) {\n            Router.push('/dashboard');\n          }\n\n          if (type === 1) {\n            Router.push('/admin');\n          }\n        });\n      } else {\n        setType(null);\n      }\n\n      enqueueSnackbar(\"Welcome back\", {\n        variant: 'success'\n      });\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    })[\"catch\"](function (e) {\n      enqueueSnackbar(e.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  var signinWithGoogle = function signinWithGoogle(redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(function (response) {\n      handleUser(response.user);\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    });\n  };\n\n  var signout = function signout() {\n    return firebase.auth().signOut().then(function () {\n      handleUser(false);\n\n      if (user.emailVerified) {\n        enqueueSnackbar(\"User successfully logged out\", {\n          variant: 'success'\n        });\n        Router.push('/signin');\n      }\n    })[\"catch\"](function (e) {\n      enqueueSnackbar(e.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onIdTokenChanged(handleUser);\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n\n  var getFreshToken = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser, token;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('getFreshToken called', new Date());\n              currentUser = firebase.auth().currentUser;\n\n              if (!currentUser) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 5;\n              return currentUser.getIdToken(false);\n\n            case 5:\n              token = _context2.sent;\n              return _context2.abrupt(\"return\", \"\".concat(token));\n\n            case 9:\n              return _context2.abrupt(\"return\", '');\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getFreshToken() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    user: user,\n    loading: loading,\n    signinWithEmail: signinWithEmail,\n    signinWithGoogle: signinWithGoogle,\n    signout: signout,\n    resetPassword: resetPassword,\n    getFreshToken: getFreshToken,\n    signupWithEmail: signupWithEmail\n  };\n}\n\nvar formatUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user) {\n    var decodedToken, token, expirationTime;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return user.getIdTokenResult(\n            /*forceRefresh*/\n            true);\n\n          case 2:\n            decodedToken = _context3.sent;\n            token = decodedToken.token, expirationTime = decodedToken.expirationTime; // console.log(token);\n\n            return _context3.abrupt(\"return\", {\n              uid: user.uid,\n              email: user.email,\n              name: user.displayName,\n              provider: user.providerData[0].providerId,\n              photoUrl: user.photoURL,\n              emailVerified: user.emailVerified,\n              token: token,\n              expirationTime: expirationTime // stripeRole: await getStripeRole(),\n\n            });\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function formatUser(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}