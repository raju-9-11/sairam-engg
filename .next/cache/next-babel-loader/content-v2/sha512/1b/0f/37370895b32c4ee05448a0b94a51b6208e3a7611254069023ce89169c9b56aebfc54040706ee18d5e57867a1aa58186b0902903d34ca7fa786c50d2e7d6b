{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport firebase from './firebase';\nimport { useSnackBar } from 'notistack';\nconst firestore = firebase.firestore();\nexport async function createUser(uid, data) {\n  return await firestore.collection('users').doc(uid).set(_objectSpread({\n    uid\n  }, data), {\n    merge: true\n  });\n}\nexport async function updateUser(uid, data) {\n  return await firestore.collection('users').doc(uid).set(_objectSpread({\n    uid\n  }, data), {\n    merge: true\n  });\n}\nexport const addSkill = async (name, description, image) => {\n  const {\n    enqueSnackbar\n  } = useSnackBar();\n  firestore.collection('skills').doc(name.split(\" \").join(\"\").toLowerCase()).set({\n    name: name,\n    description: description,\n    image: image\n  }).then(response => {\n    enqueSnackbar('Skill added');\n  }).catch(err => {});\n};\nexport async function getUserDetails(uid) {\n  return await firestore.collection('users').doc(uid).get();\n}","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/lib/db.js"],"names":["firebase","useSnackBar","firestore","createUser","uid","data","collection","doc","set","merge","updateUser","addSkill","name","description","image","enqueSnackbar","split","join","toLowerCase","then","response","catch","err","getUserDetails","get"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,MAAMC,SAAS,GAAGF,QAAQ,CAACE,SAAT,EAAlB;AAEA,OAAO,eAAeC,UAAf,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAC1C,SAAO,MAAMH,SAAS,CACnBI,UADU,CACC,OADD,EAEVC,GAFU,CAENH,GAFM,EAGVI,GAHU;AAGJJ,IAAAA;AAHI,KAGIC,IAHJ,GAGY;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAHZ,CAAb;AAID;AAED,OAAO,eAAeC,UAAf,CAA0BN,GAA1B,EAA+BC,IAA/B,EAAqC;AAC1C,SAAO,MAAMH,SAAS,CACnBI,UADU,CACC,OADD,EAEVC,GAFU,CAENH,GAFM,EAGVI,GAHU;AAGJJ,IAAAA;AAHI,KAGIC,IAHJ,GAGY;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAHZ,CAAb;AAID;AAED,OAAO,MAAOE,QAAQ,GAAG,OAAOC,IAAP,EAAaC,WAAb,EAA0BC,KAA1B,KAAoC;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAoBd,WAAW,EAArC;AACEC,EAAAA,SAAS,CACNI,UADH,CACc,QADd,EAEGC,GAFH,CAEOK,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,EAAyBC,WAAzB,EAFP,EAGGV,GAHH,CAGO;AACHI,IAAAA,IAAI,EAACA,IADF;AAEHC,IAAAA,WAAW,EAAEA,WAFV;AAGHC,IAAAA,KAAK,EAAEA;AAHJ,GAHP,EAQGK,IARH,CAQSC,QAAD,IAAc;AAClBL,IAAAA,aAAa,CAAC,aAAD,CAAb;AACD,GAVH,EAWGM,KAXH,CAWUC,GAAD,IAAQ,CAEd,CAbH;AAcH,CAhBM;AAkBP,OAAO,eAAeC,cAAf,CAA8BnB,GAA9B,EAAmC;AACxC,SAAO,MAAMF,SAAS,CACnBI,UADU,CACC,OADD,EAEVC,GAFU,CAENH,GAFM,EAGVoB,GAHU,EAAb;AAID","sourcesContent":["import firebase from './firebase';\nimport { useSnackBar } from 'notistack'\nconst firestore = firebase.firestore();\n\nexport async function createUser(uid, data) {\n  return await firestore\n    .collection('users')\n    .doc(uid)\n    .set({ uid, ...data }, { merge: true });\n}\n\nexport async function updateUser(uid, data) {\n  return await firestore\n    .collection('users')\n    .doc(uid)\n    .set({ uid, ...data }, { merge: true });\n}\n\nexport const  addSkill = async (name, description, image) => {\n  const { enqueSnackbar } = useSnackBar();\n    firestore\n      .collection('skills')\n      .doc(name.split(\" \").join(\"\").toLowerCase())\n      .set({\n        name:name,\n        description: description,\n        image: image\n      })\n      .then((response) => {\n        enqueSnackbar('Skill added')\n      })\n      .catch((err) =>{\n        \n      })\n}\n\nexport async function getUserDetails(uid) {\n  return await firestore\n    .collection('users')\n    .doc(uid)\n    .get();\n}"]},"metadata":{},"sourceType":"module"}