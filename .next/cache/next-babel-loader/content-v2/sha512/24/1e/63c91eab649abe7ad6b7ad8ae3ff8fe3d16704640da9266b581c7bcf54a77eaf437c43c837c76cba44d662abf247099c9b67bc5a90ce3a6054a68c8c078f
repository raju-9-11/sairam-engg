{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useAuth } from '../lib/auth';\nimport firebase from '../lib/firebase';\nimport { useSnackbar } from 'notistack';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Button } from '@material-ui/core';\nimport { getFields } from '../lib/db';\nimport { checkExp, checkname } from '../lib/func';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '3vh',\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: '20vh'\n      }\n    },\n    paddingBottom: '10vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  paper: {\n    height: '100%',\n    marginLeft: '4vh'\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  form: {\n    paddingTop: '7vh',\n    paddingRight: '7vh'\n  },\n  button: {\n    marginTop: '3vh'\n  },\n  box: {\n    padding: '10vh',\n    paddingTop: '25vh'\n  }\n}));\nexport default function Profileupdate() {\n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(4);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState('');\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState('');\n  const {\n    0: cid,\n    1: setCid\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: years,\n    1: setYears\n  } = useState(0);\n  const {\n    user\n  } = useAuth();\n  const firestore = firebase.firestore();\n  const {\n    0: expError,\n    1: setExpError\n  } = useState('');\n  const {\n    0: fnameError,\n    1: setFnameError\n  } = useState('');\n  const {\n    0: lnameError,\n    1: setLnameError\n  } = useState(''); // const [ password, setPassword ] = useState('');\n  // const [ final, setFinal ] = useState('');\n  // const [ foe, setFoe ] = useState('---Select---');\n\n  const handleUpdate = () => {\n    setFnameError(checkname(firstName));\n    setLnameError(checkname(lastName));\n    setExpError(checkExp(years));\n    console.log(years);\n\n    if (fnameError === '' && lnameError === '' && expError === '') {\n      firestore.collection('users').doc(user.uid).set({\n        name: firstName,\n        firstName: firstName,\n        lastName: lastName,\n        experience: years\n      }, {\n        merge: true\n      }).then(response => {\n        enqueueSnackbar('User details succesfully updated', {\n          variant: 'success'\n        });\n      }).catch(err => {\n        enqueueSnackbar('Error occured while updating');\n      });\n    }\n\n    var fireUser = firebase.auth().currentUser;\n    fireUser.updateProfile({\n      displayName: firstName\n    });\n  };\n\n  useEffect(() => {\n    if (user) {\n      try {\n        firestore.collection('users').doc(user.uid).onSnapshot(doc => {\n          setEmail(doc.data().email);\n          setFirstName(doc.data().first_name);\n          setLastName(doc.data().last_name);\n          setCid(doc.data().cid);\n          setYears(doc.data().years || 0);\n          setLoading(false);\n        });\n      } catch (e) {\n        console.log(e); // enqueueSnackbar('Error fetching Data',{variant: 'error'})\n      }\n\n      if (!user && firstName == '') {\n        enqueueSnackbar('Error fetching Data', {\n          variant: 'error'\n        });\n      }\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(Grid, {\n      container: true,\n      className: classes.root,\n      spacing: 2,\n      children: /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: spacing,\n          children: [0, 1].map((value, index) => /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxs(Paper, {\n              className: classes.paper,\n              children: [loading && /*#__PURE__*/_jsx(LinearProgress, {}), index == 0 ? /*#__PURE__*/_jsxs(Container, {\n                component: \"main\",\n                maxWidth: \"sm\",\n                className: classes.root,\n                children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsxs(Box, {\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsx(Avatar, {\n                    sx: {\n                      m: 1,\n                      bgcolor: 'secondary.main'\n                    },\n                    children: /*#__PURE__*/_jsx(AccountCircleIcon, {})\n                  }), /*#__PURE__*/_jsx(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Personal Details\"\n                  }), /*#__PURE__*/_jsx(Box, {\n                    className: classes.button,\n                    component: \"form\",\n                    noValidate: true,\n                    sx: {\n                      width: '100%',\n                      // Fix IE11 issue.\n                      mt: 3\n                    },\n                    children: /*#__PURE__*/_jsxs(Grid, {\n                      container: true,\n                      spacing: 5,\n                      children: [/*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsx(TextField, {\n                          autoComplete: \"fname\",\n                          name: \"firstName\",\n                          required: true,\n                          fullWidth: true,\n                          id: \"firstName\",\n                          label: \"First Name\",\n                          value: firstName,\n                          error: fnameError != '',\n                          helperText: fnameError,\n                          onChange: Event => setFirstName(Event.target.value),\n                          autoFocus: true,\n                          variant: \"outlined\"\n                        })\n                      }), /*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsx(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          id: \"lastName\",\n                          label: \"Last Name\",\n                          value: lastName,\n                          error: lnameError != '',\n                          helperText: lnameError,\n                          onChange: Event => setLastName(Event.target.value),\n                          name: \"lastName\",\n                          autoComplete: \"lname\",\n                          variant: \"outlined\"\n                        })\n                      }), /*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsx(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          id: \"email\",\n                          label: \"Email Address\",\n                          disabled: true,\n                          name: \"email\",\n                          value: email,\n                          onChange: Event => setEmail(Event.target.value),\n                          autoComplete: \"email\",\n                          variant: \"outlined\"\n                        })\n                      })]\n                    })\n                  })]\n                })]\n              }) : /*#__PURE__*/_jsxs(Container, {\n                component: \"main\",\n                maxWidth: \"sm\",\n                className: classes.root,\n                children: [/*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsxs(Box, {\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsx(Avatar, {\n                    sx: {\n                      m: 1,\n                      bgcolor: 'secondary.main'\n                    },\n                    children: /*#__PURE__*/_jsx(PersonIcon, {})\n                  }), /*#__PURE__*/_jsx(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Professional Details\"\n                  }), /*#__PURE__*/_jsx(Box, {\n                    className: classes.button,\n                    component: \"form\",\n                    noValidate: true,\n                    sx: {\n                      width: '100%',\n                      // Fix IE11 issue.\n                      mt: 3\n                    },\n                    children: /*#__PURE__*/_jsxs(Grid, {\n                      container: true,\n                      spacing: 5,\n                      children: [/*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsx(TextField, {\n                          autoComplete: \"cid\",\n                          name: \"collegeId\" // required\n                          ,\n                          fullWidth: true,\n                          disabled: true,\n                          id: \"clgid\",\n                          value: cid,\n                          label: \"College ID\",\n                          autoFocus: true,\n                          variant: \"outlined\"\n                        })\n                      }), /*#__PURE__*/_jsx(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsx(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          name: \"experience\",\n                          label: \"Years of Experience\",\n                          id: \"exp\",\n                          error: expError != '',\n                          helperText: expError,\n                          value: years,\n                          onChange: Event => setYears(Event.target.value),\n                          type: \"number\",\n                          autoComplete: \"exp\",\n                          variant: \"outlined\"\n                        })\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(Button, {\n                    type: \"submit\",\n                    fullWidth: true,\n                    variant: \"contained\",\n                    sx: {\n                      mt: 3,\n                      mb: 2\n                    },\n                    className: classes.button,\n                    onClick: handleUpdate,\n                    children: \"Update Details\"\n                  })]\n                })]\n              })]\n            })\n          }, value))\n        })\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}