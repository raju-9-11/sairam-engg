{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pacman/Desktop/nextjs/components/Rating.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nconst labels = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+'\n};\nconst useStyles = makeStyles({\n  root: {\n    width: 200,\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\nexport default function HoverRating() {\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Rating, {\n      name: \"hover-feedback\",\n      value: value,\n      precision: 0.5,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      onChangeActive: (event, newHover) => {\n        setHover(newHover);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), value !== null && /*#__PURE__*/_jsxDEV(Box, {\n      ml: 2,\n      children: labels[hover !== -1 ? hover : value]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/components/Rating.js"],"names":["React","makeStyles","Rating","Box","labels","useStyles","root","width","display","alignItems","HoverRating","value","setValue","useState","hover","setHover","classes","event","newValue","newHover"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,MAAMC,MAAM,GAAG;AACb,OAAK,SADQ;AAEb,KAAG,UAFU;AAGb,OAAK,MAHQ;AAIb,KAAG,OAJU;AAKb,OAAK,IALQ;AAMb,KAAG,KANU;AAOb,OAAK,MAPQ;AAQb,KAAG,OARU;AASb,OAAK,WATQ;AAUb,KAAG;AAVU,CAAf;AAaA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,UAAU,EAAE;AAHR;AADqB,CAAD,CAA5B;AAQA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAe,CAAf,CAA1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACa,QAAN,CAAe,CAAC,CAAhB,CAA1B;AACA,QAAMG,OAAO,GAAGX,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACV,IAAxB;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,gBADP;AAEE,MAAA,KAAK,EAAEK,KAFT;AAGE,MAAA,SAAS,EAAE,GAHb;AAIE,MAAA,QAAQ,EAAE,CAACM,KAAD,EAAQC,QAAR,KAAqB;AAC7BN,QAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,OANH;AAOE,MAAA,cAAc,EAAE,CAACD,KAAD,EAAQE,QAAR,KAAqB;AACnCJ,QAAAA,QAAQ,CAACI,QAAD,CAAR;AACD;AATH;AAAA;AAAA;AAAA;AAAA,YADF,EAYGR,KAAK,KAAK,IAAV,iBAAkB,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,gBAAaP,MAAM,CAACU,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,GAAuBH,KAAxB;AAAnB;AAAA;AAAA;AAAA;AAAA,YAZrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\n\nconst labels = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+',\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 200,\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nexport default function HoverRating() {\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Rating\n        name=\"hover-feedback\"\n        value={value}\n        precision={0.5}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        onChangeActive={(event, newHover) => {\n          setHover(newHover);\n        }}\n      />\n      {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}