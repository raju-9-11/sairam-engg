{"ast":null,"code":"import _regeneratorRuntime from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport firebase from './firebase';\nvar firestore = firebase.firestore();\nexport function createUser(_x, _x2) {\n  return _createUser.apply(this, arguments);\n}\n\nfunction _createUser() {\n  _createUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(uid, data) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firestore.collection('users').doc(uid).set(_objectSpread({\n              uid: uid\n            }, data), {\n              merge: true\n            });\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createUser.apply(this, arguments);\n}\n\nexport function createSite(_x3) {\n  return _createSite.apply(this, arguments);\n}\n\nfunction _createSite() {\n  _createSite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n    var site;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            site = firestore.collection('ghost_sites').doc(); // returns DocRef\n\n            _context2.next = 3;\n            return site.set(data);\n\n          case 3:\n            return _context2.abrupt(\"return\", site);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _createSite.apply(this, arguments);\n}\n\nexport function updateSite(_x4, _x5) {\n  return _updateSite.apply(this, arguments);\n}\n\nfunction _updateSite() {\n  _updateSite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(siteId, data) {\n    var site;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            site = firestore.collection('ghost_sites').doc(siteId);\n            _context3.next = 3;\n            return site.set(data, {\n              merge: true\n            });\n\n          case 3:\n            return _context3.abrupt(\"return\", site);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _updateSite.apply(this, arguments);\n}\n\nexport function deleteSite(_x6, _x7) {\n  return _deleteSite.apply(this, arguments);\n}\n\nfunction _deleteSite() {\n  _deleteSite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(siteId, token) {\n    var resp;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios[\"delete\"](\"/api/auth/site/\".concat(siteId), {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 2:\n            resp = _context4.sent;\n            return _context4.abrupt(\"return\", resp);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _deleteSite.apply(this, arguments);\n}\n\nexport function getSite(_x8) {\n  return _getSite.apply(this, arguments);\n}\n\nfunction _getSite() {\n  _getSite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(siteId) {\n    var doc, site;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return firestore.collection('ghost_sites').doc(siteId).get();\n\n          case 2:\n            doc = _context5.sent;\n            site = _objectSpread({\n              id: doc.id\n            }, doc.data());\n            return _context5.abrupt(\"return\", site);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getSite.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/lib/db.js"],"names":["axios","firebase","firestore","createUser","uid","data","collection","doc","set","merge","createSite","site","updateSite","siteId","deleteSite","token","headers","Authorization","resp","getSite","get","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAMC,SAAS,GAAGD,QAAQ,CAACC,SAAT,EAAlB;AAEA,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,iBAA0BC,GAA1B,EAA+BC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQH,SAAS,CACnBI,UADU,CACC,OADD,EAEVC,GAFU,CAENH,GAFM,EAGVI,GAHU;AAGJJ,cAAAA,GAAG,EAAHA;AAHI,eAGIC,IAHJ,GAGY;AAAEI,cAAAA,KAAK,EAAE;AAAT,aAHZ,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOP,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,kBAA0BL,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCM,YAAAA,IADD,GACQT,SAAS,CAACI,UAAV,CAAqB,aAArB,EAAoCC,GAApC,EADR,EACmD;;AADnD;AAAA,mBAECI,IAAI,CAACH,GAAL,CAASH,IAAT,CAFD;;AAAA;AAAA,8CAGEM,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,kBAA0BC,MAA1B,EAAkCR,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCM,YAAAA,IADD,GACQT,SAAS,CAACI,UAAV,CAAqB,aAArB,EAAoCC,GAApC,CAAwCM,MAAxC,CADR;AAAA;AAAA,mBAECF,IAAI,CAACH,GAAL,CAASH,IAAT,EAAe;AAAEI,cAAAA,KAAK,EAAE;AAAT,aAAf,CAFD;;AAAA;AAAA,8CAGEE,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMP,gBAAsBG,UAAtB;AAAA;AAAA;;;yEAAO,kBAA0BD,MAA1B,EAAkCE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcf,KAAK,UAAL,0BAA+Ba,MAA/B,GAAyC;AAC1DG,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,mBAAYF,KAAZ;AAAf;AADiD,aAAzC,CADd;;AAAA;AACCG,YAAAA,IADD;AAAA,8CAIEA,IAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAOP,gBAAsBC,OAAtB;AAAA;AAAA;;;sEAAO,kBAAuBN,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaX,SAAS,CAACI,UAAV,CAAqB,aAArB,EAAoCC,GAApC,CAAwCM,MAAxC,EAAgDO,GAAhD,EADb;;AAAA;AACCb,YAAAA,GADD;AAECI,YAAAA,IAFD;AAEUU,cAAAA,EAAE,EAAEd,GAAG,CAACc;AAFlB,eAEyBd,GAAG,CAACF,IAAJ,EAFzB;AAAA,8CAGEM,IAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios';\nimport firebase from './firebase';\nconst firestore = firebase.firestore();\n\nexport async function createUser(uid, data) {\n  return await firestore\n    .collection('users')\n    .doc(uid)\n    .set({ uid, ...data }, { merge: true });\n}\n\nexport async function createSite(data) {\n  const site = firestore.collection('ghost_sites').doc(); // returns DocRef\n  await site.set(data); // returns Promise<void>, so we need to await\n  return site;\n}\n\nexport async function updateSite(siteId, data) {\n  const site = firestore.collection('ghost_sites').doc(siteId);\n  await site.set(data, { merge: true }); // returns Promise<void>, so we need to await\n  return site;\n}\n\nexport async function deleteSite(siteId, token) {\n  const resp = await axios.delete(`/api/auth/site/${siteId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return resp;\n}\n\nexport async function getSite(siteId) {\n  const doc = await firestore.collection('ghost_sites').doc(siteId).get();\n  const site = { id: doc.id, ...doc.data() };\n  return site;\n}"]},"metadata":{},"sourceType":"module"}