{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport AdminLayout from '../../components/adminLayout';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Filter from '../../components/filter';\nimport { useRouter } from 'next/router';\nimport ManageSkills from '../../components/manageSkills';\nimport ManageFields from '../../components/manageFields';\nimport ViewUsers from '../../components/viewUsers';\nimport { CssBaseline, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../../lib/firebase';\nimport { useAuth } from '../../lib/auth';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    float: 'right',\n    backgroundColor: theme.palette.background.paper\n  },\n  list: {\n    marginTop: '8vh',\n    width: '87.5%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(30)\n    }\n  },\n  filter: {\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(30)\n    }\n  },\n  inline: {\n    display: 'inline'\n  },\n  log: {\n    display: 'flex',\n    flexDirection: 'column',\n    float: 'right'\n  },\n  toolbar: {\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nexport default function Admin() {\n  const classes = useStyles();\n  const {\n    user,\n    type\n  } = useAuth();\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const firestore = firebase.firestore();\n\n  if (id < 1 || id > 4) {\n    router.push('/admin/1');\n  }\n\n  useEffect(() => {\n    firestore.collection('users').get().then(response => {\n      var lst = [];\n      response.forEach(user => {\n        lst.push(user.data());\n      });\n      setUsers(lst);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AdminLayout, {\n      name: \"Filter\",\n      AppBar: true\n    }), /*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(\"footer\", {\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: classes.filter,\n        children: /*#__PURE__*/_jsx(Filter, {})\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}