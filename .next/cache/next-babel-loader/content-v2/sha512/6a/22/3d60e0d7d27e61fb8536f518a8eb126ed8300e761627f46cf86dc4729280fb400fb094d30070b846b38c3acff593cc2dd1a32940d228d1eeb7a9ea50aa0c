{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pacman/Desktop/nextjs/components/skillset.js\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from './Copyright';\nimport data from '../pages/api/mock.json';\nimport FullScreenDialog from './Modal';\nimport { useAuth } from '../lib/auth';\nimport { useEffect, useState } from 'react';\nimport firebase from '../lib/firebase';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      [theme.breakpoints.down('lg')]: {\n        marginLeft: '30vh'\n      }\n    }\n  },\n  log: {\n    display: 'flex',\n    flexDirection: 'column',\n    float: 'right'\n  },\n  toolbar: {\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nexport default function Skillset() {\n  const classes = useStyles();\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n  const {\n    user\n  } = useAuth();\n  const firestore = firebase.firestore();\n  const router = useRouter();\n  useEffect(() => {\n    firestore.collection('skills').get().then(response => {\n      response.forEach(dat => {\n        // console.log(dat.data())\n        setCards(dat.data(), ...cards);\n      });\n    });\n  }, []);\n  console.log(cards);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.heroContent,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h2\",\n            align: \"center\",\n            color: \"textPrimary\",\n            gutterBottom: true,\n            children: \"Skill List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/components/skillset.js"],"names":["Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Typography","makeStyles","Container","Copyright","data","FullScreenDialog","useAuth","useEffect","useState","firebase","useRouter","useStyles","theme","root","breakpoints","up","down","marginLeft","log","display","flexDirection","float","toolbar","width","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","footer","Skillset","classes","cards","setCards","user","firestore","router","collection","get","then","response","forEach","dat","console"],"mappings":"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","sourcesContent":["import Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from './Copyright';\nimport data from '../pages/api/mock.json';\nimport FullScreenDialog from './Modal';\nimport { useAuth } from '../lib/auth';\nimport { useEffect, useState } from 'react';\nimport firebase from '../lib/firebase'\nimport { useRouter } from 'next/router';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      [theme.breakpoints.up('sm')]:{\n        [theme.breakpoints.down('lg')]:{\n          marginLeft: '30vh'\n        }\n      },\n    },\n    log: {\n      display:'flex',\n      flexDirection:'column',\n      float:'right'\n    },\n    toolbar: {\n      width:'100%'\n    },\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n  }));\n  \n\nexport default function Skillset () {\n\n    const classes = useStyles();\n    const [ cards , setCards ] = useState([]);\n    const { user } = useAuth();\n    const firestore = firebase.firestore()\n    const router = useRouter()\n\n    useEffect(()=>{ \n      firestore \n        .collection('skills')\n        .get()\n        .then((response) => {\n          response.forEach((dat)=>{\n            // console.log(dat.data())\n            setCards(dat.data(), ...cards)\n          })\n        })\n    },[])\n\n    console.log(cards)\n\n    return (\n        <div className={classes.root}>\n            <main>\n          {/* Hero unit */}\n          <div className={classes.heroContent}>\n            <Container maxWidth=\"sm\">\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                Skill List\n              </Typography>\n              {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                Something short and leading about the collection below—its contents,\n                the creator, etc. Make it short and sweet, but not too short so folks\n                don&apos;t simply skip over it entirely.\n              </Typography> */}\n              {/* <div className={classes.heroButtons}>\n                <Grid container spacing={2} justifyContent=\"center\">\n                  <Grid item>\n                    <Button variant=\"contained\">Main call to action</Button>\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"outlined\">Secondary action</Button>\n                  </Grid>\n                </Grid>\n              </div> */}\n            </Container>\n          </div>\n          <Container className={classes.cardGrid} maxWidth=\"md\">\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n              {/* {cards.map((card) => (\n                <Grid item key={card.id} xs={12} sm={6} md={4}>\n                  <Card className={classes.card}>\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={card.image}\n                      title={card.skill}\n                    />\n                    <CardContent className={classes.cardContent}>\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {card.skill}\n                      </Typography>\n                      <Typography>\n                        {card.description}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <FullScreenDialog skill={card.skill} />\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))} */}\n            </Grid>\n          </Container>\n        </main>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}