{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Copyright from './Copyright';\nimport FullScreenDialog from './Modal';\nimport { useAuth } from '../lib/auth';\nimport { useEffect, useState } from 'react';\nimport firebase from '../lib/firebase';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      [theme.breakpoints.down('lg')]: {\n        marginLeft: '30vh'\n      }\n    }\n  },\n  log: {\n    display: 'flex',\n    flexDirection: 'column',\n    float: 'right'\n  },\n  toolbar: {\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}));\nexport default function Skillset() {\n  const classes = useStyles();\n  const {\n    0: cards,\n    1: setCards\n  } = useState([]);\n  const firestore = firebase.firestore();\n  useEffect(() => {\n    firestore.collection('skills').get().then(response => {\n      var lst = [];\n      response.forEach(dat => {\n        lst.push(_objectSpread({\n          id: dat.id\n        }, dat.data()));\n      });\n      setCards(lst);\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxs(\"main\", {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: classes.heroContent,\n        children: /*#__PURE__*/_jsx(Container, {\n          maxWidth: \"sm\",\n          children: /*#__PURE__*/_jsx(Typography, {\n            component: \"h1\",\n            variant: \"h2\",\n            align: \"center\",\n            color: \"textPrimary\",\n            gutterBottom: true,\n            children: \"Skill List\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Container, {\n        className: classes.cardGrid,\n        maxWidth: \"md\",\n        children: /*#__PURE__*/_jsx(Grid, {\n          container: true,\n          spacing: 4,\n          children: cards.map((card, index) => /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxs(Card, {\n              className: classes.card,\n              children: [/*#__PURE__*/_jsx(CardMedia, {\n                className: classes.cardMedia,\n                image: card.image,\n                title: card.name\n              }), /*#__PURE__*/_jsxs(CardContent, {\n                className: classes.cardContent,\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  children: card.name\n                }), /*#__PURE__*/_jsx(Typography, {\n                  children: card.description\n                })]\n              }), /*#__PURE__*/_jsx(CardActions, {\n                children: /*#__PURE__*/_jsx(FullScreenDialog, {\n                  skill: card,\n                  type: 'skills'\n                })\n              })]\n            })\n          }, index))\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}