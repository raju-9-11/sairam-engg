{"ast":null,"code":"import _regeneratorRuntime from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pacman/Desktop/nextjs/lib/auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport Router from 'next/router';\nimport firebase from './firebase';\nimport { createUser } from './db';\nimport { useSnackbar } from 'notistack';\nvar authContext = /*#__PURE__*/createContext();\nexport function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var auth = useFirebaseAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AuthProvider, \"0F2maWCBqtBnPg5uxJOzptuh0jA=\", false, function () {\n  return [useFirebaseAuth];\n});\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useFirebaseAuth() {\n  _s3();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState3 = useState(null),\n      type = _useState3[0],\n      setType = _useState3[1];\n\n  var firestore = firebase.firestore();\n\n  var handleUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawUser) {\n      var _user, token, userWithoutToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!rawUser) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 3;\n              return formatUser(rawUser);\n\n            case 3:\n              _user = _context.sent;\n              token = _user.token, userWithoutToken = _objectWithoutProperties(_user, [\"token\"]);\n              setUser(_user);\n              createUser(_user.uid, userWithoutToken);\n\n              try {\n                firestore.collection('users').doc(_user.uid).get().then(function (response) {\n                  setType(response.data().type);\n                });\n              } catch (e) {// console.log(e)\n              }\n\n              setLoading(false);\n              return _context.abrupt(\"return\", _user);\n\n            case 12:\n              setUser(false);\n              setLoading(false);\n              return _context.abrupt(\"return\", false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUser(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var signupWithEmail = function signupWithEmail(email, password, firstName, type, lastName, cid, years, redirect) {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      firestore.collection('users').doc(response.user.uid).set({\n        first_name: firstName,\n        last_name: lastName,\n        type: type,\n        cid: cid,\n        years: years\n      });\n      handleUser(response.user);\n      enqueueSnackbar(\"Registration successful (Set password for your account using forgot password link in signin page)\", {\n        variant: 'success'\n      });\n      Router.push('/signin');\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    })[\"catch\"](function (err) {\n      enqueueSnackbar(err.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  var resetPassword = function resetPassword(email) {\n    setLoading(true);\n    return firebase.auth().sendPasswordResetEmail(email).then(function (response) {\n      enqueueSnackbar('Email sucessfully sent to the registered mail', {\n        variant: 'success'\n      });\n    })[\"catch\"](function (err) {\n      enqueueSnackbar(err.message, {\n        variant: \"error\"\n      });\n    });\n  };\n\n  var signinWithEmail = function signinWithEmail(email, password, redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      handleUser(response.user);\n      enqueueSnackbar(\"Welcome back\", {\n        variant: 'success'\n      });\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    })[\"catch\"](function (e) {\n      enqueueSnackbar(e.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  var signinWithGoogle = function signinWithGoogle(redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(function (response) {\n      handleUser(response.user);\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    });\n  };\n\n  var signout = function signout() {\n    return firebase.auth().signOut().then(function () {\n      handleUser(false);\n\n      if (user.emailVerified) {\n        enqueueSnackbar(\"User successfully logged out\", {\n          variant: 'success'\n        });\n        Router.push('/signin');\n      }\n    })[\"catch\"](function (e) {\n      enqueueSnackbar(e.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onIdTokenChanged(handleUser);\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n\n  var getFreshToken = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser, token;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('getFreshToken called', new Date());\n              currentUser = firebase.auth().currentUser;\n\n              if (!currentUser) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 5;\n              return currentUser.getIdToken(false);\n\n            case 5:\n              token = _context2.sent;\n              return _context2.abrupt(\"return\", \"\".concat(token));\n\n            case 9:\n              return _context2.abrupt(\"return\", '');\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getFreshToken() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    user: user,\n    loading: loading,\n    signinWithEmail: signinWithEmail,\n    signinWithGoogle: signinWithGoogle,\n    signout: signout,\n    resetPassword: resetPassword,\n    getFreshToken: getFreshToken,\n    signupWithEmail: signupWithEmail\n  };\n}\n\n_s3(useFirebaseAuth, \"5SrX536hX7j7OHhNYIe8FTNDBAc=\", false, function () {\n  return [useSnackbar];\n});\n\nvar formatUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user) {\n    var decodedToken, token, expirationTime;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return user.getIdTokenResult(\n            /*forceRefresh*/\n            true);\n\n          case 2:\n            decodedToken = _context3.sent;\n            token = decodedToken.token, expirationTime = decodedToken.expirationTime; // console.log(token);\n\n            return _context3.abrupt(\"return\", {\n              uid: user.uid,\n              email: user.email,\n              name: user.displayName,\n              provider: user.providerData[0].providerId,\n              photoUrl: user.photoURL,\n              emailVerified: user.emailVerified,\n              token: token,\n              expirationTime: expirationTime // stripeRole: await getStripeRole(),\n\n            });\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function formatUser(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/lib/auth.js"],"names":["React","useState","useEffect","useContext","createContext","Router","firebase","createUser","useSnackbar","authContext","AuthProvider","children","auth","useFirebaseAuth","useAuth","user","setUser","loading","setLoading","enqueueSnackbar","type","setType","firestore","handleUser","rawUser","formatUser","token","userWithoutToken","uid","collection","doc","get","then","response","data","e","signupWithEmail","email","password","firstName","lastName","cid","years","redirect","createUserWithEmailAndPassword","set","first_name","last_name","variant","push","err","message","resetPassword","sendPasswordResetEmail","signinWithEmail","signInWithEmailAndPassword","signinWithGoogle","signInWithPopup","GoogleAuthProvider","signout","signOut","emailVerified","unsubscribe","onIdTokenChanged","getFreshToken","console","log","Date","currentUser","getIdToken","getIdTokenResult","decodedToken","expirationTime","name","displayName","provider","providerData","providerId","photoUrl","photoURL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\nimport Router from 'next/router';\nimport firebase from './firebase';\nimport { createUser } from './db';\nimport { useSnackbar } from 'notistack';\n\nconst authContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const auth = useFirebaseAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nfunction useFirebaseAuth() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { enqueueSnackbar } = useSnackbar();\n  const [ type, setType ] = useState(null);\n\n  const firestore = firebase.firestore();\n\n  const handleUser = async (rawUser) => {\n    // console.log('handleUser called', new Date(), rawUser);\n    if (rawUser) {\n      const user = await formatUser(rawUser);\n      const { token, ...userWithoutToken } = user;\n\n      setUser(user);\n      createUser(user.uid, userWithoutToken);\n\n      try{\n        firestore\n          .collection('users')\n          .doc(user.uid)\n          .get()\n          .then((response) => {\n            setType(response.data().type)\n          })\n      }\n      catch(e) {\n        // console.log(e)\n      }\n\n      setLoading(false);\n      return user;\n    } else {\n      setUser(false);\n      setLoading(false);\n      return false;\n    }\n  };\n\n  const signupWithEmail = (email, password, firstName, type, lastName, cid, years, redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        firestore.collection('users').doc(response.user.uid)\n        .set({\n          first_name: firstName,\n          last_name: lastName,\n          type: type,\n          cid: cid,\n          years: years\n        })\n        handleUser(response.user);\n        enqueueSnackbar(\"Registration successful (Set password for your account using forgot password link in signin page)\", { variant: 'success'})\n        Router.push('/signin')\n        if (redirect) {\n          Router.push(redirect);\n        }\n    })\n    .catch((err) => {\n      enqueueSnackbar(err.message, {variant  :'error'})\n    });\n    \n  }\n\n  const resetPassword = ( email ) => {\n    setLoading(true)\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then((response) => {\n        enqueueSnackbar('Email sucessfully sent to the registered mail',{variant: 'success'});\n      })\n      .catch((err) => {\n        enqueueSnackbar(err.message,{variant:\"error\"})\n      })\n  }\n\n\n  const signinWithEmail = (email, password, redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        handleUser(response.user);\n\n        enqueueSnackbar(\"Welcome back\", { variant: 'success'})\n        if (redirect) {\n          Router.push(redirect);\n        }\n      })\n      .catch((e)=>{\n        enqueueSnackbar(e.message, {variant  :'error'})\n      });\n  };\n\n\n  const signinWithGoogle = (redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      .then((response) => {\n        handleUser(response.user);\n\n        if (redirect) {\n          Router.push(redirect);\n        }\n      });\n  };\n\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        handleUser(false)\n        if(user.emailVerified){\n          enqueueSnackbar(\"User successfully logged out\", { variant: 'success'});\n          Router.push('/signin')\n        }\n      })\n      .catch((e)=>{\n        enqueueSnackbar(e.message, {variant  :'error'})\n      });\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onIdTokenChanged(handleUser);\n    return () => unsubscribe();\n  }, []);\n\n\n  const getFreshToken = async () => {\n    console.log('getFreshToken called', new Date());\n    const currentUser = firebase.auth().currentUser;\n    if (currentUser) {\n      const token = await currentUser.getIdToken(false);\n      return `${token}`;\n    } else {\n      return '';\n    }\n  };\n\n  return {\n    user,\n    loading,\n    signinWithEmail,\n    signinWithGoogle,\n    signout,\n    resetPassword,\n    getFreshToken,\n    signupWithEmail\n  };\n}\n\n\nconst formatUser = async (user) => {\n  // const token = await user.getIdToken(/* forceRefresh */ true);\n  const decodedToken = await user.getIdTokenResult(/*forceRefresh*/ true);\n  const { token, expirationTime } = decodedToken;\n  // console.log(token);\n  return {\n    uid: user.uid,\n    email: user.email,\n    name: user.displayName,\n    provider: user.providerData[0].providerId,\n    photoUrl: user.photoURL,\n    emailVerified: user.emailVerified,\n    token,\n    expirationTime,\n    // stripeRole: await getStripeRole(),\n  };\n};"]},"metadata":{},"sourceType":"module"}