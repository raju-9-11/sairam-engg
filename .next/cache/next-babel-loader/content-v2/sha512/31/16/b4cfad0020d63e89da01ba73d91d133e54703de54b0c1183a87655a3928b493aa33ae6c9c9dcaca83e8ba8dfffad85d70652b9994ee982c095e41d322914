{"ast":null,"code":"import _regeneratorRuntime from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pacman/Desktop/nextjs/lib/auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from 'react';\nimport Router from 'next/router';\nimport firebase from './firebase';\nimport { createUser } from './db';\nimport { useSnackbar } from 'notistack';\nvar authContext = /*#__PURE__*/createContext();\nexport function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var auth = useFirebaseAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AuthProvider, \"0F2maWCBqtBnPg5uxJOzptuh0jA=\", false, function () {\n  return [useFirebaseAuth];\n});\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useFirebaseAuth() {\n  _s3();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var firestore = firebase.firestore();\n\n  var handleUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawUser) {\n      var _user, token, userWithoutToken;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('handleUser called', new Date(), rawUser);\n\n              if (!rawUser) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 4;\n              return formatUser(rawUser);\n\n            case 4:\n              _user = _context.sent;\n              token = _user.token, userWithoutToken = _objectWithoutProperties(_user, [\"token\"]);\n              createUser(_user.uid, userWithoutToken);\n              setUser(_user);\n              setLoading(false);\n              return _context.abrupt(\"return\", _user);\n\n            case 12:\n              setUser(false);\n              setLoading(false);\n              return _context.abrupt(\"return\", false);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUser(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var signupWithEmail = function signupWithEmail(email, password, firstName, type, lastName, redirect) {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      firestore.collection('users').doc(response.user.uid).set({\n        first_name: firstName,\n        last_name: lastName,\n        type: type\n      });\n      handleUser(response.user);\n      enqueueSnackbar(\"Registration successful\", {\n        variant: 'success'\n      });\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    })[\"catch\"](function (err) {});\n  };\n\n  var signinWithEmail = function signinWithEmail(email, password, redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      handleUser(response.user);\n      enqueueSnackbar(\"Welcome back\", {\n        variant: 'success'\n      });\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    })[\"catch\"](function (e) {\n      enqueueSnackbar(e.message, {\n        variant: 'error'\n      });\n    });\n  };\n\n  var signinWithGitHub = function signinWithGitHub(redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.GithubAuthProvider()).then(function (response) {\n      handleUser(response.user);\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    });\n  };\n\n  var signinWithTwitter = function signinWithTwitter(redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.TwitterAuthProvider()).then(function (response) {\n      handleUser(response.user);\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    });\n  };\n\n  var signinWithGoogle = function signinWithGoogle(redirect) {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(function (response) {\n      handleUser(response.user);\n\n      if (redirect) {\n        Router.push(redirect);\n      }\n    });\n  };\n\n  var signout = function signout() {\n    Router.push('/signin');\n    return firebase.auth().signOut().then(function () {\n      return handleUser(false);\n    });\n  };\n\n  useEffect(function () {\n    var unsubscribe = firebase.auth().onIdTokenChanged(handleUser);\n    return function () {\n      return unsubscribe();\n    };\n  }, []); // useEffect(() => {\n  //   const interval = setInterval(async () => {\n  //     if (user) {\n  //       const token = await firebase\n  //         .auth()\n  //         .currentUser.getIdToken(/* forceRefresh */ true);\n  //       setUser(user);\n  //       console.log('refreshed token');\n  //     }\n  //   }, 30 * 60 * 1000 /*every 30min, assuming token expires every 1hr*/);\n  //   return () => clearInterval(interval);\n  // }, [user]); // needs to depend on user to have closure on a valid user object in callback fun\n\n  var getFreshToken = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser, token;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log('getFreshToken called', new Date());\n              currentUser = firebase.auth().currentUser;\n\n              if (!currentUser) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 5;\n              return currentUser.getIdToken(false);\n\n            case 5:\n              token = _context2.sent;\n              return _context2.abrupt(\"return\", \"\".concat(token));\n\n            case 9:\n              return _context2.abrupt(\"return\", '');\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getFreshToken() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    user: user,\n    loading: loading,\n    signinWithEmail: signinWithEmail,\n    signinWithGitHub: signinWithGitHub,\n    signinWithTwitter: signinWithTwitter,\n    signinWithGoogle: signinWithGoogle,\n    signout: signout,\n    getFreshToken: getFreshToken,\n    signupWithEmail: signupWithEmail\n  };\n} // const getStripeRole = async () => {\n//   await firebase.auth().currentUser.getIdToken(true);\n//   const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\n//   return decodedToken.claims.stripeRole || 'free';\n// };\n\n\n_s3(useFirebaseAuth, \"RMUc8taOuKtYuWUIJi0NnhsWsKw=\", false, function () {\n  return [useSnackbar];\n});\n\nvar formatUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user) {\n    var decodedToken, token, expirationTime;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return user.getIdTokenResult(\n            /*forceRefresh*/\n            true);\n\n          case 2:\n            decodedToken = _context3.sent;\n            token = decodedToken.token, expirationTime = decodedToken.expirationTime;\n            console.log(token);\n            return _context3.abrupt(\"return\", {\n              uid: user.uid,\n              email: user.email,\n              name: user.displayName,\n              provider: user.providerData[0].providerId,\n              photoUrl: user.photoURL,\n              token: token,\n              expirationTime: expirationTime // stripeRole: await getStripeRole(),\n\n            });\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function formatUser(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/lib/auth.js"],"names":["React","useState","useEffect","useContext","createContext","Router","firebase","createUser","useSnackbar","authContext","AuthProvider","children","auth","useFirebaseAuth","useAuth","user","setUser","loading","setLoading","enqueueSnackbar","firestore","handleUser","rawUser","console","log","Date","formatUser","token","userWithoutToken","uid","signupWithEmail","email","password","firstName","type","lastName","redirect","createUserWithEmailAndPassword","then","response","collection","doc","set","first_name","last_name","variant","push","err","signinWithEmail","signInWithEmailAndPassword","e","message","signinWithGitHub","signInWithPopup","GithubAuthProvider","signinWithTwitter","TwitterAuthProvider","signinWithGoogle","GoogleAuthProvider","signout","signOut","unsubscribe","onIdTokenChanged","getFreshToken","currentUser","getIdToken","getIdTokenResult","decodedToken","expirationTime","name","displayName","provider","providerData","providerId","photoUrl","photoURL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from 'react';\nimport Router from 'next/router';\nimport firebase from './firebase';\nimport { createUser } from './db';\nimport { useSnackbar } from 'notistack';\n\nconst authContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const auth = useFirebaseAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\nfunction useFirebaseAuth() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const firestore = firebase.firestore();\n\n  const handleUser = async (rawUser) => {\n    console.log('handleUser called', new Date(), rawUser);\n    if (rawUser) {\n      const user = await formatUser(rawUser);\n      const { token, ...userWithoutToken } = user;\n\n      createUser(user.uid, userWithoutToken);\n      setUser(user);\n\n      setLoading(false);\n      return user;\n    } else {\n      setUser(false);\n      setLoading(false);\n      return false;\n    }\n  };\n\n  const signupWithEmail = (email, password, firstName, type, lastName, redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        firestore.collection('users').doc(response.user.uid)\n        .set({\n          first_name: firstName,\n          last_name: lastName,\n          type: type,\n        })\n        handleUser(response.user);\n        enqueueSnackbar(\"Registration successful\", { variant: 'success'})\n    \n        if (redirect) {\n          Router.push(redirect);\n        }\n    })\n    .catch((err) => {\n    });\n    \n  }\n\n  const signinWithEmail = (email, password, redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        handleUser(response.user);\n\n        enqueueSnackbar(\"Welcome back\", { variant: 'success'})\n        if (redirect) {\n          Router.push(redirect);\n        }\n      })\n      .catch((e)=>{\n        enqueueSnackbar(e.message, {variant  :'error'})\n      });\n  };\n\n  const signinWithGitHub = (redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GithubAuthProvider())\n      .then((response) => {\n        handleUser(response.user);\n\n        if (redirect) {\n          Router.push(redirect);\n        }\n      });\n  };\n\n  const signinWithTwitter = (redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.TwitterAuthProvider())\n      .then((response) => {\n        handleUser(response.user);\n\n        if (redirect) {\n          Router.push(redirect);\n        }\n      });\n  };\n\n  const signinWithGoogle = (redirect) => {\n    setLoading(true);\n    return firebase\n      .auth()\n      .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n      .then((response) => {\n        handleUser(response.user);\n\n        if (redirect) {\n          Router.push(redirect);\n        }\n      });\n  };\n\n  const signout = () => {\n    Router.push('/signin')\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => handleUser(false));\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onIdTokenChanged(handleUser);\n    return () => unsubscribe();\n  }, []);\n\n  // useEffect(() => {\n  //   const interval = setInterval(async () => {\n  //     if (user) {\n  //       const token = await firebase\n  //         .auth()\n  //         .currentUser.getIdToken(/* forceRefresh */ true);\n  //       setUser(user);\n  //       console.log('refreshed token');\n  //     }\n  //   }, 30 * 60 * 1000 /*every 30min, assuming token expires every 1hr*/);\n  //   return () => clearInterval(interval);\n  // }, [user]); // needs to depend on user to have closure on a valid user object in callback fun\n\n  const getFreshToken = async () => {\n    console.log('getFreshToken called', new Date());\n    const currentUser = firebase.auth().currentUser;\n    if (currentUser) {\n      const token = await currentUser.getIdToken(false);\n      return `${token}`;\n    } else {\n      return '';\n    }\n  };\n\n  return {\n    user,\n    loading,\n    signinWithEmail,\n    signinWithGitHub,\n    signinWithTwitter,\n    signinWithGoogle,\n    signout,\n    getFreshToken,\n    signupWithEmail\n  };\n}\n\n// const getStripeRole = async () => {\n//   await firebase.auth().currentUser.getIdToken(true);\n//   const decodedToken = await firebase.auth().currentUser.getIdTokenResult();\n//   return decodedToken.claims.stripeRole || 'free';\n// };\n\nconst formatUser = async (user) => {\n  // const token = await user.getIdToken(/* forceRefresh */ true);\n  const decodedToken = await user.getIdTokenResult(/*forceRefresh*/ true);\n  const { token, expirationTime } = decodedToken;\n  console.log(token);\n  return {\n    uid: user.uid,\n    email: user.email,\n    name: user.displayName,\n    provider: user.providerData[0].providerId,\n    photoUrl: user.photoURL,\n    token,\n    expirationTime,\n    // stripeRole: await getStripeRole(),\n  };\n};"]},"metadata":{},"sourceType":"module"}