{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pacman/Desktop/nextjs/components/profileupdate.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useAuth } from '../lib/auth';\nimport data from '../pages/api/mock.json';\nimport firebase from '../lib/firebase';\nimport { useSnackbar } from 'notistack';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Button } from '@material-ui/core';\nimport { getFields } from '../lib/db';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '3vh',\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: '20vh'\n      }\n    },\n    paddingBottom: '10vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  paper: {\n    height: '100%',\n    marginLeft: '4vh'\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  form: {\n    paddingTop: '7vh',\n    paddingRight: '7vh'\n  },\n  button: {\n    marginTop: '3vh'\n  },\n  box: {\n    padding: '10vh',\n    paddingTop: '25vh'\n  }\n}));\nconst fields = data.Fields;\nexport default function Profileupdate() {\n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(4);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: firstName,\n    1: setFirstName\n  } = useState('');\n  const {\n    0: lastName,\n    1: setLastName\n  } = useState('');\n  const {\n    0: cid,\n    1: setCid\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: final,\n    1: setFinal\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: foe,\n    1: setFoe\n  } = useState('---Select---');\n  const {\n    0: years,\n    1: setYears\n  } = useState(0);\n  const {\n    user\n  } = useAuth();\n  const firestore = firebase.firestore();\n\n  const handleUpdate = () => {};\n\n  useEffect(() => {\n    if (user) {\n      try {\n        firestore.collection('users').doc(user.uid).onSnapshot(doc => {\n          setEmail(doc.data().email);\n          setFirstName(doc.data().first_name);\n          setLastName(doc.data().last_name);\n          setCid(doc.data().cid);\n          setYears(doc.data().years || 0);\n          setLoading(false);\n        });\n      } catch (e) {\n        console.log(e); // enqueueSnackbar('Error fetching Data',{variant: 'error'})\n      }\n\n      if (!user && firstName == '') {\n        enqueueSnackbar('Error fetching Data', {\n          variant: 'error'\n        });\n      }\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: spacing,\n          children: [0, 1].map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [loading && /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 30\n              }, this), index == 0 ? /*#__PURE__*/_jsxDEV(Container, {\n                component: \"main\",\n                maxWidth: \"sm\",\n                className: classes.root,\n                children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      m: 1,\n                      bgcolor: 'secondary.main'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Personal Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.button,\n                    component: \"form\",\n                    noValidate: true,\n                    sx: {\n                      width: '100%',\n                      // Fix IE11 issue.\n                      mt: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 5,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          autoComplete: \"fname\",\n                          name: \"firstName\",\n                          required: true,\n                          fullWidth: true,\n                          id: \"firstName\",\n                          label: \"First Name\",\n                          value: firstName,\n                          onChange: Event => setFirstName(Event.target.value),\n                          autoFocus: true,\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          id: \"lastName\",\n                          label: \"Last Name\",\n                          value: lastName,\n                          onChange: Event => setLastName(Event.target.value),\n                          name: \"lastName\",\n                          autoComplete: \"lname\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          id: \"email\",\n                          label: \"Email Address\",\n                          disabled: true,\n                          name: \"email\",\n                          value: email,\n                          onChange: Event => setEmail(Event.target.value),\n                          autoComplete: \"email\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Container, {\n                component: \"main\",\n                maxWidth: \"sm\",\n                className: classes.root,\n                children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      m: 1,\n                      bgcolor: 'secondary.main'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Professional Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.button,\n                    component: \"form\",\n                    noValidate: true,\n                    sx: {\n                      width: '100%',\n                      // Fix IE11 issue.\n                      mt: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 5,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          autoComplete: \"cid\",\n                          name: \"collegeId\" // required\n                          ,\n                          fullWidth: true,\n                          disabled: true,\n                          id: \"clgid\",\n                          value: cid,\n                          label: \"College ID\",\n                          autoFocus: true,\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          name: \"experience\",\n                          label: \"Years of Experience\",\n                          id: \"exp\",\n                          value: years,\n                          onChange: Event => setYears(Event.target.value),\n                          type: \"number\",\n                          autoComplete: \"exp\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    fullWidth: true,\n                    variant: \"contained\",\n                    sx: {\n                      mt: 3,\n                      mb: 2\n                    },\n                    className: classes.button,\n                    onClick: handleUpdate,\n                    children: \"Update Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/components/profileupdate.js"],"names":["makeStyles","React","useCallback","useEffect","useState","Grid","MenuItem","Container","CssBaseline","Box","Avatar","AccountCircleIcon","Typography","Paper","TextField","PersonIcon","useAuth","data","firebase","useSnackbar","LinearProgress","Button","getFields","useStyles","theme","root","marginTop","flexGrow","breakpoints","up","down","paddingLeft","paddingBottom","display","flexDirection","alignItems","paper","height","marginLeft","control","padding","spacing","form","paddingTop","paddingRight","button","box","fields","Fields","Profileupdate","classes","setSpacing","enqueueSnackbar","loading","setLoading","firstName","setFirstName","lastName","setLastName","cid","setCid","password","setPassword","final","setFinal","email","setEmail","foe","setFoe","years","setYears","user","firestore","handleUpdate","collection","doc","uid","onSnapshot","first_name","last_name","e","console","log","variant","map","value","index","m","bgcolor","width","mt","Event","target","mb"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useAuth } from '../lib/auth';\nimport data from '../pages/api/mock.json';\nimport firebase from '../lib/firebase';\nimport { useSnackbar } from 'notistack'; \nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Button } from '@material-ui/core';\nimport { getFields } from '../lib/db'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop:'3vh',\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]:{\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: '20vh',\n      }\n    },\n    paddingBottom:'10vh',\n    display:'flex',\n    flexDirection:'column',\n    alignItems:'center'\n  },\n  paper: {\n    height: '100%',\n    marginLeft:'4vh',\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  form:{\n    paddingTop:'7vh',\n    paddingRight:'7vh'\n  },\n  button: {\n    marginTop: '3vh'\n  },\n  box:{\n    padding: '10vh',\n    paddingTop: '25vh'\n  },\n}));\n\nconst fields = data.Fields;\n\n\nexport default function Profileupdate () {\n  const classes = useStyles();\n  const [spacing, setSpacing] = React.useState(4);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [ loading, setLoading ] = useState(true);\n  const [ firstName , setFirstName ] = useState('');\n  const [ lastName , setLastName ] = useState('');\n  const [ cid, setCid ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ final, setFinal ] = useState('');\n  const [ email, setEmail] = useState('');\n  const [ foe, setFoe ] = useState('---Select---');\n  const [ years, setYears ] = useState(0);\n  const { user } = useAuth();\n  const firestore = firebase.firestore();\n\n  const handleUpdate = () => {\n\n  }\n\n  useEffect(() => {\n    if(user){\n      try{\n        firestore\n          .collection('users')\n          .doc(user.uid)\n          .onSnapshot((doc) => {\n            setEmail(doc.data().email);\n              setFirstName(doc.data().first_name);\n              setLastName(doc.data().last_name);\n              setCid(doc.data().cid);\n              setYears(doc.data().years || 0);\n              setLoading(false)\n          })\n      }\n      catch(e){\n        console.log(e)\n        // enqueueSnackbar('Error fetching Data',{variant: 'error'})\n      }\n      if(!user && firstName==''){\n        enqueueSnackbar('Error fetching Data',{variant: 'error'})\n      }\n    }\n  },[user])\n\n\n  return (\n      <div >\n        <Grid container className={classes.root} spacing={2}>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\" spacing={spacing}>\n              {[0, 1].map((value,index) => (\n                <Grid key={value} item>\n                  <Paper className={classes.paper} >\n                  {loading &&<LinearProgress />}\n\n                    {index==0? (\n                    <Container component=\"main\" maxWidth=\"sm\" className={classes.root}>\n                    <CssBaseline />\n                    <Box className={classes.form}>\n                        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                        <AccountCircleIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\" >\n                        Personal Details\n                        </Typography>\n                        <Box\n                        className={classes.button}\n                        component=\"form\"\n                        noValidate\n                        sx={{\n                            width: '100%', // Fix IE11 issue.\n                            mt: 3,\n                        }}\n                        >\n                        <Grid container spacing={5}>\n                            <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                value={firstName}\n                                onChange={(Event)=> setFirstName(Event.target.value)}\n                                autoFocus\n                                variant=\"outlined\"\n                            />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                            <TextField\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                value={lastName}\n                                onChange={(Event)=> setLastName(Event.target.value)}\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                variant=\"outlined\"\n                            />\n                            </Grid>\n                            <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                disabled\n                                name=\"email\"\n                                value={email}\n                                onChange={(Event)=>setEmail(Event.target.value)}\n                                autoComplete=\"email\"\n                                variant=\"outlined\"\n                            />\n                            </Grid>\n                            {/* <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"password\"\n                                value={password}\n                                onChange={(Event)=> setPassword(Event.target.value)}\n                                label=\"Current Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                variant=\"outlined\"\n                            />\n                            </Grid> \n                            <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"npassword\"\n                                value={final}\n                                onChange={(Event) => setFinal(Event.target.value)}\n                                label=\"New Password\"\n                                type=\"password\"\n                                id=\"npassword\"\n                                variant=\"outlined\"\n                            />\n                            </Grid> */}\n                            {/* <Grid item xs={12}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                            </Grid> */}\n                        </Grid>\n                        </Box>\n                    </Box>\n                    </Container>) \n                    :\n                      ( <Container component=\"main\" maxWidth=\"sm\" className={classes.root}>\n                      <CssBaseline />\n                      <Box className={classes.form}>\n                          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                          <PersonIcon />\n                          </Avatar>\n                          <Typography component=\"h1\" variant=\"h5\" >\n                          Professional Details\n                          </Typography>\n                          <Box\n                          className={classes.button}\n                          component=\"form\"\n                          noValidate\n                          sx={{\n                              width: '100%', // Fix IE11 issue.\n                              mt: 3,\n                          }}\n                          >\n                          <Grid container spacing={5}>\n                              <Grid item xs={12} >\n                              <TextField\n                                  autoComplete=\"cid\"\n                                  name=\"collegeId\"\n                                  // required\n                                  fullWidth\n                                  disabled\n                                  id=\"clgid\"\n                                  value={cid}\n                                  label=\"College ID\"\n                                  autoFocus\n                                  variant=\"outlined\"\n                              />\n                              </Grid>\n                              {/* <Grid item xs={12}>\n                            <TextField\n                              select\n                              fullWidth\n                              label=\"Field of Study\"\n                              value={foe}\n                              onChange={(Event) => setFoe(Event.target.value)}\n                              // helperText=\"Please select the required field\"\n                              variant=\"outlined\"\n                            >\n                               <MenuItem key={1} value={'---Select---'}>\n                                  {'---Select---'}\n                                </MenuItem>\n                              {fields.map((option) => (\n                                <MenuItem key={option.id} value={option.skill}>\n                                  {option.skill}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid> */}\n                              <Grid item xs={12}>\n                              <TextField\n                                  required\n                                  fullWidth\n                                  name=\"experience\"\n                                  label=\"Years of Experience\"\n                                  id=\"exp\"\n                                  value={years}\n                                  onChange={(Event) => setYears(Event.target.value)}\n                                  type=\"number\"\n                                  autoComplete=\"exp\"\n                                  variant=\"outlined\"\n                              />\n                              </Grid>\n                              {/* <Grid item xs={12}>\n                              <FormControlLabel\n                                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                              />\n                              </Grid> */}\n                          </Grid>\n                          </Box>\n                          <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            className={classes.button}\n                            onClick={handleUpdate}\n                          >\n                            Update Details\n                          </Button>\n                      </Box>\n                      </Container>)}\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n        </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}