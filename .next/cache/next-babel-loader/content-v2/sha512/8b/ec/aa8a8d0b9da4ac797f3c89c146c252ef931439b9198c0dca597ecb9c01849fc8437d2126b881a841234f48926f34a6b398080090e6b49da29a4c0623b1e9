{"ast":null,"code":"import _defineProperty from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/home/pacman/Desktop/nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nvar NextComposed = /*#__PURE__*/React.forwardRef(function NextComposed(props, ref) {\n  var as = props.as,\n      href = props.href,\n      other = _objectWithoutProperties(props, [\"as\", \"href\"]);\n\n  return /*#__PURE__*/_jsx(NextLink, {\n    href: href,\n    as: as,\n    children: /*#__PURE__*/_jsx(\"a\", _objectSpread({\n      ref: ref\n    }, other))\n  });\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props) {\n  var href = props.href,\n      _props$activeClassNam = props.activeClassName,\n      activeClassName = _props$activeClassNam === void 0 ? 'active' : _props$activeClassNam,\n      classNameProps = props.className,\n      innerRef = props.innerRef,\n      naked = props.naked,\n      other = _objectWithoutProperties(props, [\"href\", \"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  var router = useRouter();\n  var pathname = typeof href === 'string' ? href : href.pathname;\n  var className = clsx(classNameProps, _defineProperty({}, activeClassName, router.pathname === pathname && activeClassName));\n\n  if (naked) {\n    return /*#__PURE__*/_jsx(NextComposed, _objectSpread({\n      className: className,\n      ref: innerRef,\n      href: href\n    }, other));\n  }\n\n  return /*#__PURE__*/_jsx(MuiLink, _objectSpread({\n    component: NextComposed,\n    className: className,\n    ref: innerRef,\n    href: href\n  }, other));\n}\n\nexport default /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({}, props), {}, {\n    innerRef: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}