{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nconst NextComposed = /*#__PURE__*/React.forwardRef(function NextComposed(props, ref) {\n  const {\n    as,\n    href\n  } = props,\n        other = _objectWithoutProperties(props, [\"as\", \"href\"]);\n\n  return /*#__PURE__*/_jsx(NextLink, {\n    href: href,\n    as: as,\n    children: /*#__PURE__*/_jsx(\"a\", _objectSpread({\n      ref: ref\n    }, other))\n  });\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props) {\n  const {\n    href,\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked\n  } = props,\n        other = _objectWithoutProperties(props, [\"href\", \"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName\n  });\n\n  if (naked) {\n    return /*#__PURE__*/_jsx(NextComposed, _objectSpread({\n      className: className,\n      ref: innerRef,\n      href: href\n    }, other));\n  }\n\n  return /*#__PURE__*/_jsx(MuiLink, _objectSpread({\n    component: NextComposed,\n    className: className,\n    ref: innerRef,\n    href: href\n  }, other));\n}\n\nexport default /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({}, props), {}, {\n  innerRef: ref\n})));","map":null,"metadata":{},"sourceType":"module"}