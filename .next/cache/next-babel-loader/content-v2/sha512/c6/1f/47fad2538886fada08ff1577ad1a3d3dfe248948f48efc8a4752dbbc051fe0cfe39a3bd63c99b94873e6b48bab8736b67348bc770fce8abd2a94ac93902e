{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport firebase from '../lib/firebase';\nimport { useRouter } from 'next/router';\nimport { useSnackbar } from 'notistack';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2vh 5vh 5vh 5vh'\n  }\n}));\nexport default function EditField({\n  card\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [field, setField] = React.useState(card.name);\n  const [description, setDescription] = React.useState(card.description);\n  const [image, setImage] = React.useState(card.image);\n  const firestore = firebase.firestore();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleFieldChange = val => {\n    setField(val);\n  };\n\n  const handleDescriptionChange = val => {\n    setDescription(val);\n  };\n\n  const handleImageChange = val => {\n    setImage(val);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    firestore.collection('fields').doc(card.id).set({\n      name: field,\n      description: description,\n      image: image\n    }).then(response => {\n      enqueueSnackbar(\"Edit successful\", {\n        variant: 'success'\n      }); // router.reload()\n    }).catch(err => {\n      console.log(err);\n      enqueueSnackbar(\"An error occured\", {\n        variant: 'error'\n      });\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Button, {\n      size: \"small\",\n      onClick: handleClickOpen,\n      children: \"Edit Field\"\n    }), /*#__PURE__*/_jsxs(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsx(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Edit Field\"\n      }), /*#__PURE__*/_jsxs(DialogContent, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsx(DialogContentText, {\n          children: \"To Add or modify field , please enter the required details.\"\n        }), /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 5,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsx(TextField, {\n              autoFocus: true,\n              variant: \"outlined\",\n              margin: \"dense\",\n              id: \"name\",\n              value: field,\n              onChange: Event => handleFieldChange(Event.target.value),\n              label: \"Field Name\",\n              type: \"name\",\n              fullWidth: true\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsx(TextField, {\n              autoFocus: true,\n              variant: \"outlined\",\n              margin: \"dense\",\n              id: \"img\",\n              value: image,\n              onChange: Event => handleImageChange(Event.target.value),\n              label: \"Image URL\",\n              fullWidth: true\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(TextField, {\n              autoFocus: true,\n              variant: \"outlined\",\n              margin: \"dense\",\n              value: description,\n              onChange: Event => handleDescriptionChange(Event.target.value),\n              id: \"description\",\n              label: \"Skill Description\",\n              fullWidth: true\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(DialogActions, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: handleSave,\n          color: \"primary\",\n          children: \"Save\"\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}