{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AlignItemsList from './listview';\nimport firebase from '../lib/firebase';\nimport Fuse from 'fuse.js';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: '3vh'\n  },\n  pap: {\n    marginBottom: '5vh',\n    padding: '2px 4px',\n    display: 'flex',\n    width: 400\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\nexport default function ViewUsers(props) {\n  const classes = useStyles();\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState([]);\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const firestore = firebase.firestore();\n  useEffect(() => {\n    const fuse = new Fuse(users, {\n      keys: ['cid']\n    });\n    setFiltered(fuse.search(search));\n  }, [search]);\n  useEffect(() => {\n    firestore.collection('users').get().then(response => {\n      var lst = [];\n      response.forEach(user => {\n        lst.push(user.data());\n      });\n      setUsers(lst);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxs(Paper, {\n      component: \"form\",\n      className: classes.pap,\n      children: [/*#__PURE__*/_jsx(InputBase, {\n        className: classes.input,\n        placeholder: \"Search users by college id\",\n        value: search,\n        onChange: Event => setSearch(Event.target.value) // inputProps={{ 'aria-label': 'search google maps' }}\n\n      }), /*#__PURE__*/_jsx(Divider, {\n        className: classes.divider,\n        orientation: \"vertical\"\n      }), /*#__PURE__*/_jsx(IconButton, {\n        type: \"submit\",\n        className: classes.iconButton,\n        \"aria-label\": \"search\",\n        children: /*#__PURE__*/_jsx(SearchIcon, {})\n      })]\n    }), filtered.length > 0 && /*#__PURE__*/_jsx(AlignItemsList, {\n      users: filtered\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}