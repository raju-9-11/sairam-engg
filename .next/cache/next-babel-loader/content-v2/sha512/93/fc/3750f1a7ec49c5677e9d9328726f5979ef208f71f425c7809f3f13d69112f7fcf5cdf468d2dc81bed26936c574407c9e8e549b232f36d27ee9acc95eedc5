{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pacman/Desktop/nextjs/components/filter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport { useSnackbar } from 'notistack';\nimport AlignItemsList from './listview';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport data from '../pages/api/mock.json';\nimport firebase from '../lib/firebase';\nimport Fuse from 'fuse.js';\nimport Button from '@material-ui/core/Button';\nimport { getFields, getSkills } from '../lib/db';\nconst useStyles = makeStyles(theme => ({\n  text: {\n    width: '25vh'\n  },\n  root: {\n    marginTop: '6vh',\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: '20vh'\n      }\n    },\n    paddingBottom: '10vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  paper: {\n    height: '100%',\n    marginLeft: '4vh'\n  },\n  control: {\n    padding: theme.spacing(2)\n  },\n  form: {\n    paddingTop: '7vh',\n    paddingRight: '7vh'\n  },\n  button1: {\n    marginTop: '3vh',\n    width: '90%'\n  },\n  button: {\n    marginTop: '3vh'\n  },\n  box: {\n    padding: '10vh',\n    paddingTop: '25vh'\n  }\n}));\nexport default function Filter() {\n  const classes = useStyles(); // const [ cid, setCid ] = useState('');\n\n  const {\n    0: skills,\n    1: setSkills\n  } = useState([]);\n  const {\n    0: fields,\n    1: setFields\n  } = useState([]);\n  const {\n    0: foe,\n    1: setFoe\n  } = useState('---Select---');\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState([]);\n  const {\n    0: skill,\n    1: setSkill\n  } = useState('---Select---');\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: sp,\n    1: setSp\n  } = useState(0);\n  const {\n    0: fp,\n    1: setFp\n  } = useState(0);\n  const {\n    0: spError,\n    1: setSpError\n  } = useState('');\n  const {\n    0: fpError,\n    1: setFpError\n  } = useState('');\n  const firestore = firebase.firestore();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const getFID = () => {\n    return fields.find(element => element.name === foe).id || '';\n  };\n\n  const getSID = () => {\n    return skills.find(element => element.name === foe).id || '';\n  };\n\n  const handleGet = () => {\n    const fid = getFID();\n    const fuse = new Fuse(users, {\n      includeScore: true,\n      tokenize: false,\n      useExtendedSearch: true,\n      keys: [`${fid}.points`]\n    });\n    const data = fuse.search(`=${fp}`);\n\n    if (data.length < 1) {\n      enqueueSnackbar(\"No Users Available\");\n    } else {\n      setFiltered(data);\n    } // const sid = getSID();\n    // const sfuse  =new Fuse(users,{\n    //   includeScore:true,\n    //   keys: [`${sid}.points`]\n    // })\n    // const final = sfuse.search()\n\n  };\n\n  const getData = useCallback(async () => {\n    getFields().then(response => {\n      var lst = [];\n      response.forEach(dat => {\n        lst.push(_objectSpread({\n          id: dat.id\n        }, dat.data()));\n      });\n      setFields(lst);\n    });\n    getSkills().then(response => {\n      var lst = [];\n      response.forEach(dat => {\n        lst.push(_objectSpread({\n          id: dat.id\n        }, dat.data()));\n      });\n      setSkills(lst);\n    });\n  });\n  useEffect(() => {\n    firestore.collection('users').get().then(response => {\n      var lst = [];\n      response.forEach(user => {\n        lst.push(user.data());\n      });\n      setUsers(lst);\n    });\n    getData();\n  }, []);\n\n  const handleFieldChange = event => {\n    setFoe(event.target.value);\n  };\n\n  const handleSkillChange = event => {\n    setSkill(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          spacing: 4,\n          children: [0, 1].map((value, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: index == 0 ? /*#__PURE__*/_jsxDEV(Container, {\n                component: \"main\",\n                maxWidth: \"sm\",\n                className: classes.root,\n                children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Filter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    component: \"form\",\n                    className: classes.button,\n                    noValidate: true,\n                    sx: {\n                      width: '100%',\n                      // Fix IE11 issue.\n                      mt: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 5,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          select: true,\n                          fullWidth: true,\n                          label: \"Select a Field\",\n                          value: foe,\n                          onChange: handleFieldChange,\n                          helperText: \"Please select the required field\",\n                          variant: \"outlined\",\n                          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: '---Select---',\n                            children: '---Select---'\n                          }, '12', false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 211,\n                            columnNumber: 33\n                          }, this), fields.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: option.name,\n                            children: option.name\n                          }, option.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 215,\n                            columnNumber: 35\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          required: true,\n                          fullWidth: true,\n                          name: \"experience\",\n                          label: \"Years of Experience\",\n                          helperText: \"Enter the number of years\",\n                          id: \"exp\",\n                          type: \"number\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          select: true,\n                          fullWidth: true,\n                          label: \"Select a Skill\",\n                          value: skill,\n                          onChange: handleSkillChange,\n                          helperText: \"Please select the required skill\",\n                          variant: \"outlined\",\n                          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: '---Select---',\n                            children: '---Select---'\n                          }, '0a2', false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 243,\n                            columnNumber: 33\n                          }, this), skills.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                            value: option.name,\n                            children: option.name\n                          }, option.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 247,\n                            columnNumber: 35\n                          }, this))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Container, {\n                component: \"main\",\n                maxWidth: \"sm\",\n                className: classes.root,\n                children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.form,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"h1\",\n                    variant: \"h5\",\n                    children: \"Parameters\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.button,\n                    component: \"form\",\n                    noValidate: true,\n                    sx: {\n                      width: '100%',\n                      // Fix IE11 issue.\n                      mt: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 5,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField // className={classes.text}\n                        , {\n                          required: true,\n                          fullWidth: true,\n                          type: \"number\",\n                          value: fp,\n                          error: fpError != '',\n                          helperText: fpError,\n                          onChange: Event => setFp(Event.target.value) // inputProps={{ min: \"0\", max: \"5\", step: \"0.5\" }}\n                          ,\n                          name: \"foesp\",\n                          label: \"Field of expertise (Skill Points)\",\n                          id: \"foesp\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 291,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(TextField // className={classes.text}\n                        , {\n                          required: true,\n                          fullWidth: true,\n                          type: \"number\",\n                          value: sp,\n                          error: spError != '',\n                          helperText: spError,\n                          onChange: Event => setSp(Event.target.value) // inputProps={{ min: \"0\", max: \"5\", step: \"0.5\" }}\n                          ,\n                          name: \"skillsp\",\n                          label: \"Skill Set (Skill Points)\",\n                          id: \"skillspsp\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 308,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  fullWidth: true,\n                  variant: \"contained\",\n                  sx: {\n                    mt: 3,\n                    mb: 2\n                  },\n                  className: classes.button1,\n                  onClick: handleGet,\n                  children: \"Get\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), filtered.length > 0 && /*#__PURE__*/_jsxDEV(AlignItemsList, {\n      users: filtered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/pacman/Desktop/nextjs/components/filter.js"],"names":["makeStyles","React","useState","useEffect","useCallback","Grid","Paper","Container","CssBaseline","Box","useSnackbar","AlignItemsList","Typography","TextField","MenuItem","data","firebase","Fuse","Button","getFields","getSkills","useStyles","theme","text","width","root","marginTop","flexGrow","breakpoints","up","down","paddingLeft","paddingBottom","display","flexDirection","paper","height","marginLeft","control","padding","spacing","form","paddingTop","paddingRight","button1","button","box","Filter","classes","skills","setSkills","fields","setFields","foe","setFoe","filtered","setFiltered","skill","setSkill","users","setUsers","sp","setSp","fp","setFp","spError","setSpError","fpError","setFpError","firestore","enqueueSnackbar","getFID","find","element","name","id","getSID","handleGet","fid","fuse","includeScore","tokenize","useExtendedSearch","keys","search","length","getData","then","response","lst","forEach","dat","push","collection","get","user","handleFieldChange","event","target","value","handleSkillChange","map","index","mt","option","Event","mb"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport React, { useState , useEffect, useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport { useSnackbar } from 'notistack'\nimport AlignItemsList from './listview'\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport data from '../pages/api/mock.json'\nimport firebase from '../lib/firebase'\nimport Fuse from 'fuse.js'\nimport Button from '@material-ui/core/Button'\nimport { getFields, getSkills } from '../lib/db'\n\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    width:'25vh'\n  },\n  root: {\n    marginTop:'6vh',\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]:{\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: '20vh',\n      }\n    },\n    paddingBottom:'10vh',\n    display:'flex',\n    flexDirection:'column',\n  },\n  paper: {\n    height: '100%',\n    marginLeft:'4vh',\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  form:{\n    paddingTop:'7vh',\n    paddingRight:'7vh'\n  },\n  button1: {\n    marginTop: '3vh',\n    width:'90%'\n  },\n  button: {\n    marginTop: '3vh',\n  },\n  box:{\n    padding: '10vh',\n    paddingTop: '25vh'\n  },\n}));\n\n\nexport default function Filter() {\n  const classes = useStyles();\n  // const [ cid, setCid ] = useState('');\n  const [ skills, setSkills]  = useState([]); \n  const [ fields, setFields ] = useState([]);\n  const [ foe, setFoe ] = useState('---Select---');\n  const [ filtered , setFiltered ] = useState([]);\n  const [ skill, setSkill ] = useState('---Select---');\n  const [ users, setUsers ] = useState([]);\n  const [ sp, setSp ] = useState(0);\n  const [ fp, setFp ] = useState(0);\n  const [ spError, setSpError ] = useState('');\n  const [ fpError, setFpError ] = useState('') \n  const firestore = firebase.firestore();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const getFID = () => {\n    return fields.find(element => element.name===foe).id || ''\n  }\n\n  const getSID = () => {\n    return skills.find(element => element.name===foe).id || ''\n  }\n\n  const handleGet = () => {\n    const fid = getFID();\n\n    const fuse = new Fuse(users,{\n      includeScore:true,\n      tokenize: false,\n      useExtendedSearch: true,\n      keys: [`${fid}.points`]\n    })\n    const data = fuse.search(`=${fp}`);\n    if (data.length<1){\n      enqueueSnackbar(\"No Users Available\")\n    }else{\n      setFiltered(data)\n    }\n\n    // const sid = getSID();\n\n    // const sfuse  =new Fuse(users,{\n    //   includeScore:true,\n    //   keys: [`${sid}.points`]\n    // })\n\n    // const final = sfuse.search()\n\n\n  }\n\n  const getData = useCallback(async() => {\n    getFields()\n      .then((response)=>{\n        var lst =[]\n        response.forEach((dat) =>{\n            lst.push({\n              id:dat.id,\n            ...dat.data()\n          })\n        })\n        setFields(lst)\n      })\n      getSkills()\n        .then((response) => {\n          var lst=[]\n          response.forEach((dat)=> {\n            lst.push({\n              id:dat.id,\n              ...dat.data()\n            })\n          })\n          setSkills(lst)\n        })\n\n  })\n\n\n  useEffect(() =>{ \n    firestore\n      .collection('users')\n      .get()\n      .then((response) => {\n        var lst =[]\n        response.forEach((user) =>{\n          lst.push(user.data());\n        })\n        setUsers(lst)\n      })\n     getData();\n  },[])\n\n  const handleFieldChange = (event) => {\n    setFoe(event.target.value);\n  };\n\n  const handleSkillChange = (event) => {\n    setSkill(event.target.value);\n  };\n\n\n  return (\n    <div >\n      <Grid container className={classes.root} spacing={2} >\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={4}>\n            {[0, 1].map((value,index) => (\n                <Grid key={value} item>\n                  <Paper className={classes.paper} > \n                  {index==0?(\n                    <Container component=\"main\" maxWidth=\"sm\"   className={classes.root}>\n                    <CssBaseline />\n                    <Box className={classes.form}>\n                        <Typography component=\"h1\" variant=\"h5\" >\n                          Filter\n                        </Typography>\n                        <Box\n                        component=\"form\"\n                        className={classes.button}\n                        noValidate\n                        sx={{\n                            width: '100%', // Fix IE11 issue.\n                            mt: 3,\n                        }}\n                        >\n                        <Grid container spacing={5}>\n                            {/* <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                id=\"cid\"\n                                label=\"College ID\"\n                                name=\"cid\"\n                                value= {cid}\n                                onChange={(Event) => setCid(Event.target.value)}\n                                autoComplete=\"cid\"\n                                variant=\"outlined\"\n                            />\n                            </Grid> */}\n                            <Grid item xs={12}>\n                              <TextField\n                                select\n                                fullWidth\n                                label=\"Select a Field\"\n                                value={foe}\n                                onChange={handleFieldChange}\n                                helperText=\"Please select the required field\"\n                                variant=\"outlined\"\n                              >\n                                <MenuItem key={'12'} value={'---Select---'}>\n                                    {'---Select---'}\n                                  </MenuItem>\n                                {fields.map((option) => (\n                                  <MenuItem key={option.id} value={option.name}>\n                                    {option.name}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Grid>\n                            <Grid item xs={12}>\n                            <TextField\n                                required\n                                fullWidth\n                                name=\"experience\"\n                                label=\"Years of Experience\"\n                                helperText=\"Enter the number of years\"\n                                id=\"exp\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                            />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <TextField\n                                select\n                                fullWidth\n                                label=\"Select a Skill\"\n                                value={skill}\n                                onChange={handleSkillChange}\n                                helperText=\"Please select the required skill\"\n                                variant=\"outlined\"\n                              >\n                                <MenuItem key={'0a2'} value={'---Select---'}>\n                                    {'---Select---'}\n                                  </MenuItem>\n                                {skills.map((option) => (\n                                  <MenuItem key={option.id} value={option.name}>\n                                    {option.name}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Grid>\n                        </Grid>\n                        </Box>\n                    </Box>\n                    </Container>\n                  )\n                :\n                ( \n                <Container component=\"main\" maxWidth=\"sm\" className={classes.root} >\n                <CssBaseline />\n                <Box className={classes.form}>\n                    {/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                    <AccountCircleIcon />\n                    </Avatar> */}\n                    <Typography component=\"h1\" variant=\"h5\" >\n                      Parameters\n                    </Typography>\n                    <Box\n                    className={classes.button}\n                    component=\"form\"\n                    noValidate\n                    sx={{\n                        width: '100%', // Fix IE11 issue.\n                        mt: 3,\n                    }}\n                    >\n                    <Grid container spacing={5}>\n                        {/* <Grid item xs={12}>\n                        <TextField\n                            required\n                            fullWidth\n                            id=\"cid\"\n                            label=\"College ID\"\n                            name=\"cid\"\n                            autoComplete=\"cid\"\n                            variant=\"outlined\"\n                        />\n                        </Grid> */}\n                        <Grid item xs={12}>\n                        <TextField\n                            // className={classes.text}\n                            required\n                            fullWidth\n                            type=\"number\"\n                            value={fp}\n                            error={fpError!=''}\n                            helperText={fpError}\n                            onChange={(Event)=>setFp(Event.target.value)}\n                            // inputProps={{ min: \"0\", max: \"5\", step: \"0.5\" }}\n                            name=\"foesp\"\n                            label=\"Field of expertise (Skill Points)\"\n                            id=\"foesp\"\n                            variant=\"outlined\"\n                        />\n                        </Grid>\n                        <Grid item xs={12}>\n                        <TextField\n                            // className={classes.text}\n                            required\n                            fullWidth\n                            type=\"number\"\n                            value={sp}\n                            error={spError!=''}\n                            helperText={spError}\n                            onChange={(Event)=>setSp(Event.target.value)}\n                            // inputProps={{ min: \"0\", max: \"5\", step: \"0.5\" }}\n                            name=\"skillsp\"\n                            label=\"Skill Set (Skill Points)\"\n                            id=\"skillspsp\"\n                            variant=\"outlined\"\n                        />\n                        </Grid>\n                    </Grid>\n                    </Box>\n                </Box>\n                  <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        className={classes.button1}\n                        onClick={handleGet}\n                      >\n                        Get\n                      </Button>\n                </Container>)}\n                </Paper>\n              </Grid>))}\n         </Grid>\n       </Grid>\n     </Grid>\n     {filtered.length>0 && <AlignItemsList users={filtered}/>}\n     </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}